type SavedWorkouts @model @auth(rules: [{allow: public}]) {
  id: ID!
  userID: ID! @index(name: "byUser")
  workoutsID: ID! @index(name: "byWorkouts")
}

enum Foodcategory {
  BREAKFAST
  LUNCH
  DINNER
  SNACKS
}

enum Themes {
  LIGHT
  DARK
}

type Checkin @model @auth(rules: [{allow: public}]) {
  id: ID!
  lowestweight: String
  somewins: String
  setbacks: String
  barriers: String
  sleepquality: String
  appetite: String
  energylevel: String
  othernotes: String
  waist: String
  neck: String
  userID: ID! @index(name: "byUser")
  generalnotes: String
  photo_1: String
  photo_2: String
}

type FoodEntry @model @auth(rules: [{allow: public}]) {
  id: ID!
  date: String
  category: Foodcategory
  desc: String
  protein: Float
  carbs: Float
  fat: Float
  fiber: Float
  calories: Float
  userID: ID! @index(name: "byUser")
}

type Messages @model @auth(rules: [{allow: public}]) {
  id: ID!
  message: String
  sender_userid: String
  receiver_userid: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type UserInfo @model @auth(rules: [{allow: public}]) {
  id: ID!
  type: String
  i_gender: String
  i_goals: String
  i_trainingactivity: String
  i_lifestyleactivity: String
  i_height: String
  i_height_units: String
  i_weight: String
  i_weight_units: String
  i_neck: String
  i_neck_units: String
  i_waist: String
  i_waist_units: String
  i_hip: String
  i_hip_units: String
  i_body_fat_pct: String
  User: User @hasOne
}

type Articles @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String
  author: String
  desc: String
  date: String
  video_YN: Boolean
  video_url: String
}

type Programs @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String
  desc: String
  free: Boolean
  price: String
}

enum Units {
  KG
  LBS
}

type Comments @model @auth(rules: [{allow: public}]) {
  id: ID!
  comment: String
  userID: ID! @index(name: "byUser")
  workoutsID: ID! @index(name: "byWorkouts")
}

enum ResultCategory {
  TIME
  SETSREPS
  WEIGHT
}

type SubWorkouts @model @auth(rules: [{allow: public}]) {
  id: ID!
  group: String
  grouptitle: String
  desc: String
  resultcategory: ResultCategory
  required: Boolean
  timecap: String
  workoutsID: ID! @index(name: "byWorkouts")
  WorkoutResults: [WorkoutResults] @hasMany(indexName: "bySubWorkouts", fields: ["id"])
}

type WorkoutResults @model @auth(rules: [{allow: public}]) {
  id: ID!
  value: String
  userID: ID! @index(name: "byUser")
  subworkoutsID: ID! @index(name: "bySubWorkouts")
}

type Workouts @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String
  desc: String
  date: String
  type: String
  SubWorkouts: [SubWorkouts] @hasMany(indexName: "byWorkouts", fields: ["id"])
  Comments: [Comments] @hasMany(indexName: "byWorkouts", fields: ["id"])
  SavedWorkouts: [SavedWorkouts] @hasMany(indexName: "byWorkouts", fields: ["id"])
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  email: String
  sub: String
  units: Units
  nutrition_info: Boolean
  nutrition_coaching: Boolean
  q_experience: String
  q_medical: String
  q_calcmacros: String
  coach_userid: String
  theme: Themes
  image: String
  image_uri: String
  Checkins: [Checkin] @hasMany(indexName: "byUser", fields: ["id"])
  Foodentries: [FoodEntry] @hasMany(indexName: "byUser", fields: ["id"])
  WorkoutResults: [WorkoutResults] @hasMany(indexName: "byUser", fields: ["id"])
  Comments: [Comments] @hasMany(indexName: "byUser", fields: ["id"])
  SavedWorkouts: [SavedWorkouts] @hasMany(indexName: "byUser", fields: ["id"])
  coach_yn: Boolean
  updatedAt: AWSDateTime
}
 